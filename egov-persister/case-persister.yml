serviceMaps:
  serviceName: case-services
  mappings:
    - version: 1.0
      description: Persists case details in tables
      fromTopic: save-case-application
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.id
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: cases
      queryMaps:
        - query: INSERT INTO dristi_cases(id, tenantid, resolutionmechanism, casetitle, casedescription, filingnumber, cmpNumber,casetype, casenumber,cnrnumber,courtcasenumber, accesscode, advocatecount, isactive, courtid, benchid, judgeid, filingdate,judgementdate, registrationdate, casecategory, natureofpleading, status, remarks, casedetails, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
          basePath: cases
          jsonMaps:
            - jsonPath: $.cases.id
            - jsonPath: $.cases.tenantId
            - jsonPath: $.cases.resolutionMechanism
            - jsonPath: $.cases.caseTitle
            - jsonPath: $.cases.caseDescription
            - jsonPath: $.cases.filingNumber
            - jsonPath: $.cases.cmpNumber
            - jsonPath: $.cases.caseType
            - jsonPath: $.cases.caseNumber
            - jsonPath: $.cases.cnrNumber
            - jsonPath: $.cases.courtCaseNumber
            - jsonPath: $.cases.accessCode
            - jsonPath: $.cases.advocateCount
            - jsonPath: $.cases.isActive
            - jsonPath: $.cases.courtId
            - jsonPath: $.cases.benchId
            - jsonPath: $.cases.judgeId
            - jsonPath: $.cases.filingDate
            - jsonPath: $.cases.judgementDate
            - jsonPath: $.cases.registrationDate
            - jsonPath: $.cases.caseCategory
            - jsonPath: $.cases.natureOfPleading
            - jsonPath: $.cases.status
            - jsonPath: $.cases.remarks
            - jsonPath: $.cases.caseDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.auditDetails.createdBy
            - jsonPath: $.cases.auditDetails.lastModifiedBy
            - jsonPath: $.cases.auditDetails.createdTime
            - jsonPath: $.cases.auditDetails.lastModifiedTime

        - query: INSERT INTO dristi_linked_case(id, relationshiptype, casenumbers, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?);
          basePath: cases.linkedCases.*
          jsonMaps:
            - jsonPath: $.cases.linkedCases.*.id
            - jsonPath: $.cases.linkedCases.*.relationshipType
            - jsonPath: $.cases.linkedCases.*.caseNumber
            - jsonPath: $.cases.linkedCases.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.linkedCases.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.linkedCases.*.auditDetails.createdBy
            - jsonPath: $.cases.linkedCases.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.linkedCases.*.auditDetails.createdTime
            - jsonPath: $.cases.linkedCases.*.auditDetails.lastModifiedTime

        - query: INSERT INTO dristi_case_statutes_and_sections(id, tenantid, statutes, sections, subsections, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
          basePath: cases.statutesAndSections.*
          jsonMaps:
            - jsonPath: $.cases.statutesAndSections.*.id
            - jsonPath: $.cases.statutesAndSections.*.tenantId
            - jsonPath: $.cases.statutesAndSections.*.statute
            - jsonPath: $.cases.statutesAndSections.*.strSections
            - jsonPath: $.cases.statutesAndSections.*.strSubsections
            - jsonPath: $.cases.id
            - jsonPath: $.cases.statutesAndSections.*.additionalDetails
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.createdBy
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.createdTime
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.lastModifiedTime

        - query: INSERT INTO public.dristi_case_litigants(id, tenantid, partycategory, individualid, organisationid, partytype, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime, hassigned, isresponserequired) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
          basePath: cases.litigants.*
          jsonMaps:
            - jsonPath: $.cases.litigants.*.id
            - jsonPath: $.cases.litigants.*.tenantId
            - jsonPath: $.cases.litigants.*.partyCategory
            - jsonPath: $.cases.litigants.*.individualId
            - jsonPath: $.cases.litigants.*.organisationID
            - jsonPath: $.cases.litigants.*.partyType
            - jsonPath: $.cases.litigants.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.litigants.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.litigants.*.auditDetails.createdBy
            - jsonPath: $.cases.litigants.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.litigants.*.auditDetails.createdTime
            - jsonPath: $.cases.litigants.*.auditDetails.lastModifiedTime
            - jsonPath: $.cases.litigants.*.hasSigned
            - jsonPath: $.cases.litigants.*.isResponseRequired

        - query: INSERT INTO public.dristi_case_representatives(id, tenantid, advocateid, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime, hassigned) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
          basePath: cases.representatives.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.id
            - jsonPath: $.cases.representatives.*.tenantId
            - jsonPath: $.cases.representatives.*.advocateId
            - jsonPath: $.cases.representatives.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.representatives.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.representatives.*.auditDetails.createdBy
            - jsonPath: $.cases.representatives.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.representatives.*.auditDetails.createdTime
            - jsonPath: $.cases.representatives.*.auditDetails.lastModifiedTime
            - jsonPath: $.cases.representatives.*.hasSigned

        - query: INSERT INTO public.dristi_case_representing(id, tenantid, partycategory, individualid, organisationid, case_id, partytype, isactive, representative_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
          basePath: cases.representatives.*.representing.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.representing.*.id
            - jsonPath: $.cases.representatives.*.representing.*.tenantId
            - jsonPath: $.cases.representatives.*.representing.*.partyCategory
            - jsonPath: $.cases.representatives.*.representing.*.individualId
            - jsonPath: $.cases.representatives.*.representing.*.organisationID
            - jsonPath: $.cases.id
            - jsonPath: $.cases.representatives.*.representing.*.partyType
            - jsonPath: $.cases.representatives.*.representing.*.isActive
            - jsonPath: $.cases.representatives[*][?({id} in @.representing[*].id)].id
            - jsonPath: $.cases.representatives.*.representing.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.createdBy
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.createdTime
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.lastModifiedTime

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType,isActive,case_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?);
          basePath: cases.documents.*
          jsonMaps:
            - jsonPath: $.cases.documents.*.id
            - jsonPath: $.cases.documents.*.fileStore
            - jsonPath: $.cases.documents.*.documentUid
            - jsonPath: $.cases.documents.*.documentType
            - jsonPath: $.cases.documents.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType, isActive, litigant_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?);
          basePath: cases.litigants.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.litigants.*.documents.*.id
            - jsonPath: $.cases.litigants.*.documents.*.fileStore
            - jsonPath: $.cases.litigants.*.documents.*.documentUid
            - jsonPath: $.cases.litigants.*.documents.*.documentType
            - jsonPath: $.cases.litigants.*.documents.*.isActive
            - jsonPath: $.cases.litigants[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.litigants.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType, isActive, representative_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?);
          basePath: cases.representatives.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.documents.*.id
            - jsonPath: $.cases.representatives.*.documents.*.fileStore
            - jsonPath: $.cases.representatives.*.documents.*.documentUid
            - jsonPath: $.cases.representatives.*.documents.*.documentType
            - jsonPath: $.cases.representatives.*.documents.*.isActive
            - jsonPath: $.cases.representatives[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.representatives.*.documents.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType, isActive,representing_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?);
          basePath: cases.representatives.*.representing.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.id
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.fileStore
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.documentUid
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.documentType
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.isActive
            - jsonPath: $.cases.representatives.*.representing[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_poaholders(id,tenant_id,case_id,individual_id,poa_type,name,is_active,additional_details,hasSigned,representing_litigants,created_by,last_modified_by,created_time,last_modified_time) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)
          basePath: cases.poaHolders.*
          jsonMaps:
            - jsonPath: $.cases.poaHolders.*.id
            - jsonPath: $.cases.poaHolders.*.tenantId
            - jsonPath: $.cases.poaHolders.*.caseId
            - jsonPath: $.cases.poaHolders.*.individualId
            - jsonPath: $.cases.poaHolders.*.poaType
            - jsonPath: $.cases.poaHolders.*.name
            - jsonPath: $.cases.poaHolders.*.isActive
            - jsonPath: $.cases.poaHolders.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.poaHolders.*.hasSigned
            - jsonPath: $.cases.poaHolders.*.representingLitigants
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.poaHolders.*.auditDetails.createdBy
            - jsonPath: $.cases.poaHolders.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.poaHolders.*.auditDetails.createdTime
            - jsonPath: $.cases.poaHolders.*.auditDetails.lastModifiedTime

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType, isActive,poaholder_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?);
          basePath: cases.poaHolders.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.poaHolders.*.documents.*.id
            - jsonPath: $.cases.poaHolders.*.documents.*.fileStore
            - jsonPath: $.cases.poaHolders.*.documents.*.documentUid
            - jsonPath: $.cases.poaHolders.*.documents.*.documentType
            - jsonPath: $.cases.poaHolders.*.documents.*.isActive
            - jsonPath: $.cases.poaHolders[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.poaHolders.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB


    - version: 1.0
      description: Update case details in tables
      fromTopic: update-case-application
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.id
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: cases
      queryMaps:
        - query: UPDATE dristi_cases SET tenantid=?,resolutionmechanism=?,casetitle=?,casedescription=?,filingnumber=?,casetype=?,casenumber=?,cnrnumber=?,cmpNumber=?,courtcasenumber=?,accesscode=?, advocatecount=?, isactive=?,courtid=?,benchid=?,judgeid=?,filingdate=?,judgementdate=?,registrationdate=?,casecategory=?,natureofpleading=?,status=?,remarks=?,casedetails=?,additionaldetails=?,lastmodifiedby=?,lastModifiedtime=? WHERE id=?;
          basePath: cases
          jsonMaps:
            - jsonPath: $.cases.tenantId
            - jsonPath: $.cases.resolutionMechanism
            - jsonPath: $.cases.caseTitle
            - jsonPath: $.cases.caseDescription
            - jsonPath: $.cases.filingNumber
            - jsonPath: $.cases.caseType
            - jsonPath: $.cases.caseNumber
            - jsonPath: $.cases.cnrNumber
            - jsonPath: $.cases.cmpNumber
            - jsonPath: $.cases.courtCaseNumber
            - jsonPath: $.cases.accessCode
            - jsonPath: $.cases.advocateCount
            - jsonPath: $.cases.isActive
            - jsonPath: $.cases.courtId
            - jsonPath: $.cases.benchId
            - jsonPath: $.cases.judgeId
            - jsonPath: $.cases.filingDate
            - jsonPath: $.cases.judgementDate
            - jsonPath: $.cases.registrationDate
            - jsonPath: $.cases.caseCategory
            - jsonPath: $.cases.natureOfPleading
            - jsonPath: $.cases.status
            - jsonPath: $.cases.remarks
            - jsonPath: $.cases.caseDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.auditDetails.lastModifiedBy
            - jsonPath: $.cases.auditDetails.lastModifiedTime
            - jsonPath: $.cases.id

        - query: INSERT INTO dristi_linked_case (id, relationshiptype, casenumbers, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET relationshiptype = EXCLUDED.relationshiptype, casenumbers = EXCLUDED.casenumbers, isactive = EXCLUDED.isactive, case_id = EXCLUDED.case_id, additionaldetails = EXCLUDED.additionaldetails, lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime;
          basePath: cases.linkedCases.*
          jsonMaps:
            - jsonPath: $.cases.linkedCases.*.id
            - jsonPath: $.cases.linkedCases.*.relationshipType
            - jsonPath: $.cases.linkedCases.*.caseNumber
            - jsonPath: $.cases.linkedCases.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.linkedCases.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.linkedCases.*.auditDetails.createdBy
            - jsonPath: $.cases.linkedCases.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.linkedCases.*.auditDetails.createdTime
            - jsonPath: $.cases.linkedCases.*.auditDetails.lastModifiedTime

        - query: INSERT INTO dristi_case_statutes_and_sections (id, tenantid, statutes, sections, subsections, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET statutes = EXCLUDED.statutes, sections = EXCLUDED.sections, subsections = EXCLUDED.subsections, case_id = EXCLUDED.case_id, additionaldetails = EXCLUDED.additionaldetails, lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime;
          basePath: cases.statutesAndSections.*
          jsonMaps:
            - jsonPath: $.cases.statutesAndSections.*.id
            - jsonPath: $.cases.statutesAndSections.*.tenantId
            - jsonPath: $.cases.statutesAndSections.*.statute
            - jsonPath: $.cases.statutesAndSections.*.strSections
            - jsonPath: $.cases.statutesAndSections.*.strSubsections
            - jsonPath: $.cases.id
            - jsonPath: $.cases.statutesAndSections.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.createdBy
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.createdTime
            - jsonPath: $.cases.statutesAndSections.*.auditDetails.lastModifiedTime

        - query: INSERT INTO public.dristi_case_litigants (id, tenantid, partycategory, individualid, organisationid, partytype, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime, hassigned, isresponserequired) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET partycategory = EXCLUDED.partycategory, individualid = EXCLUDED.individualid, organisationid = EXCLUDED.organisationid, case_id = EXCLUDED.case_id, partytype = EXCLUDED.partytype, isactive = EXCLUDED.isactive, additionaldetails = EXCLUDED.additionaldetails, lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime, hassigned = EXCLUDED.hassigned, isresponserequired=EXCLUDED.isresponserequired;
          basePath: cases.litigants.*
          jsonMaps:
            - jsonPath: $.cases.litigants.*.id
            - jsonPath: $.cases.litigants.*.tenantId
            - jsonPath: $.cases.litigants.*.partyCategory
            - jsonPath: $.cases.litigants.*.individualId
            - jsonPath: $.cases.litigants.*.organisationID
            - jsonPath: $.cases.litigants.*.partyType
            - jsonPath: $.cases.litigants.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.litigants.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.litigants.*.auditDetails.createdBy
            - jsonPath: $.cases.litigants.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.litigants.*.auditDetails.createdTime
            - jsonPath: $.cases.litigants.*.auditDetails.lastModifiedTime
            - jsonPath: $.cases.litigants.*.hasSigned
            - jsonPath: $.cases.litigants.*.isResponseRequired

        - query: INSERT INTO dristi_case_representatives (id, tenantid, advocateid, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime, hassigned) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET tenantid = EXCLUDED.tenantid, advocateid = EXCLUDED.advocateid, isactive = EXCLUDED.isactive, case_id = EXCLUDED.case_id, additionaldetails = EXCLUDED.additionaldetails, lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime, hassigned = EXCLUDED.hassigned;
          basePath: cases.representatives.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.id
            - jsonPath: $.cases.representatives.*.tenantId
            - jsonPath: $.cases.representatives.*.advocateId
            - jsonPath: $.cases.representatives.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.representatives.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.representatives.*.auditDetails.createdBy
            - jsonPath: $.cases.representatives.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.representatives.*.auditDetails.createdTime
            - jsonPath: $.cases.representatives.*.auditDetails.lastModifiedTime
            - jsonPath: $.cases.representatives.*.hasSigned

        - query: INSERT INTO dristi_case_representing (id, tenantid, partycategory, individualid, organisationid, case_id, partytype, isactive, representative_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET partycategory = EXCLUDED.partycategory, individualid = EXCLUDED.individualid, organisationid = EXCLUDED.organisationid, case_id = EXCLUDED.case_id, partytype = EXCLUDED.partytype, isactive = EXCLUDED.isactive, representative_id = EXCLUDED.representative_id, additionaldetails = EXCLUDED.additionaldetails, lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime;
          basePath: cases.representatives.*.representing.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.representing.*.id
            - jsonPath: $.cases.representatives.*.representing.*.tenantId
            - jsonPath: $.cases.representatives.*.representing.*.partyCategory
            - jsonPath: $.cases.representatives.*.representing.*.individualId
            - jsonPath: $.cases.representatives.*.representing.*.organisationID
            - jsonPath: $.cases.representatives.*.representing.*.caseId
            - jsonPath: $.cases.representatives.*.representing.*.partyType
            - jsonPath: $.cases.representatives.*.representing.*.isActive
            - jsonPath: $.cases.representatives[*][?({id} in @.representing[*].id)].id
            - jsonPath: $.cases.representatives.*.representing.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.createdBy
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.createdTime
            - jsonPath: $.cases.representatives.*.representing.*.auditDetails.lastModifiedTime

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType,isActive,case_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET fileStore = EXCLUDED.fileStore, documentUid = EXCLUDED.documentUid, documentType = EXCLUDED.documentType, isActive=EXCLUDED.isActive, case_id = EXCLUDED.case_id, additionalDetails = EXCLUDED.additionalDetails;
          basePath: cases.documents.*
          jsonMaps:
            - jsonPath: $.cases.documents.*.id
            - jsonPath: $.cases.documents.*.fileStore
            - jsonPath: $.cases.documents.*.documentUid
            - jsonPath: $.cases.documents.*.documentType
            - jsonPath: $.cases.documents.*.isActive
            - jsonPath: $.cases.id
            - jsonPath: $.cases.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType,isActive, litigant_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET fileStore = EXCLUDED.fileStore, documentUid = EXCLUDED.documentUid, documentType = EXCLUDED.documentType, isActive=EXCLUDED.isActive, litigant_id = EXCLUDED.litigant_id, additionalDetails = EXCLUDED.additionalDetails;
          basePath: cases.litigants.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.litigants.*.documents.*.id
            - jsonPath: $.cases.litigants.*.documents.*.fileStore
            - jsonPath: $.cases.litigants.*.documents.*.documentUid
            - jsonPath: $.cases.litigants.*.documents.*.documentType
            - jsonPath: $.cases.litigants.*.documents.*.isActive
            - jsonPath: $.cases.litigants[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.litigants.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType,isActive, representative_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET fileStore = EXCLUDED.fileStore, documentUid = EXCLUDED.documentUid, documentType = EXCLUDED.documentType, isActive=EXCLUDED.isActive, representative_id = EXCLUDED.representative_id, additionalDetails = EXCLUDED.additionalDetails;
          basePath: cases.representatives.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.documents.*.id
            - jsonPath: $.cases.representatives.*.documents.*.fileStore
            - jsonPath: $.cases.representatives.*.documents.*.documentUid
            - jsonPath: $.cases.representatives.*.documents.*.documentType
            - jsonPath: $.cases.representatives.*.documents.*.isActive
            - jsonPath: $.cases.representatives[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.representatives.*.documents.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType,isActive, representing_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET fileStore = EXCLUDED.fileStore, documentUid = EXCLUDED.documentUid, documentType = EXCLUDED.documentType, isActive=EXCLUDED.isActive, representing_id = EXCLUDED.representing_id, additionalDetails = EXCLUDED.additionalDetails;
          basePath: cases.representatives.*.representing.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.id
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.fileStore
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.documentUid
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.documentType
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.isActive
            - jsonPath: $.cases.representatives.*.representing[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.representatives.*.representing.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

        - query: INSERT INTO dristi_case_poaholders(id,tenant_id,case_id,individual_id,poa_type,name,is_active,additional_details,hasSigned,representing_litigants,created_by,last_modified_by,created_time,last_modified_time) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?) ON CONFLICT (id) do update set 
            tenant_id = EXCLUDED.tenant_id,
            case_id = EXCLUDED.case_id,
            individual_id = EXCLUDED.individual_id,
            poa_type = EXCLUDED.poa_type,
            name = EXCLUDED.name,
            is_active = EXCLUDED.is_active,
            additional_details = EXCLUDED.additional_details,
            hasSigned = EXCLUDED.hasSigned,
            representing_litigants = EXCLUDED.representing_litigants,
            created_by = EXCLUDED.created_by,
            last_modified_by = EXCLUDED.last_modified_by,
            created_time = EXCLUDED.created_time,
            last_modified_time = EXCLUDED.last_modified_time;
          basePath: cases.poaHolders.*
          jsonMaps:
            - jsonPath: $.cases.poaHolders.*.id
            - jsonPath: $.cases.poaHolders.*.tenantId
            - jsonPath: $.cases.poaHolders.*.caseId
            - jsonPath: $.cases.poaHolders.*.individualId
            - jsonPath: $.cases.poaHolders.*.poaType
            - jsonPath: $.cases.poaHolders.*.name
            - jsonPath: $.cases.poaHolders.*.isActive
            - jsonPath: $.cases.poaHolders.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.poaHolders.*.hasSigned
            - jsonPath: $.cases.poaHolders.*.representingLitigants
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.poaHolders.*.auditDetails.createdBy
            - jsonPath: $.cases.poaHolders.*.auditDetails.lastModifiedBy
            - jsonPath: $.cases.poaHolders.*.auditDetails.createdTime
            - jsonPath: $.cases.poaHolders.*.auditDetails.lastModifiedTime

        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType,isActive, poaholder_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) do update set
            fileStore = EXCLUDED.fileStore,
            documentUid = EXCLUDED.documentUid,
            documentType = EXCLUDED.documentType,
            isActive=EXCLUDED.isActive,
            poaholder_id = EXCLUDED.poaholder_id,
            additionalDetails = EXCLUDED.additionalDetails;
          basePath: cases.poaHolders.*.documents.*
          jsonMaps:
            - jsonPath: $.cases.poaHolders.*.documents.*.id
            - jsonPath: $.cases.poaHolders.*.documents.*.fileStore
            - jsonPath: $.cases.poaHolders.*.documents.*.documentUid
            - jsonPath: $.cases.poaHolders.*.documents.*.documentType
            - jsonPath: $.cases.poaHolders.*.documents.*.isActive
            - jsonPath: $.cases.poaHolders.*.documents[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.cases.poaHolders.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

    - version: 1.0
      description: Update case status in tables
      fromTopic: update-case-status-application
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.id
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: cases
      queryMaps:
        - query: UPDATE dristi_cases SET status = ?, accessCode = ?, lastmodifiedby = ?,  lastmodifiedtime = ?, filingdate = ? WHERE filingNumber=?;
          basePath: cases
          jsonMaps:
            - jsonPath: $.cases.status
            - jsonPath: $.cases.accessCode
            - jsonPath: $.cases.auditDetails.lastModifiedBy
            - jsonPath: $.cases.auditDetails.lastModifiedTime
            - jsonPath: $.cases.filingDate
            - jsonPath: $.cases.filingNumber

    - version: 1.0
      description: Persists new litigant for a case in dristi_case_litigants table
      fromTopic: litigant-join-case
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.id
      tenantIdJsonPath: $.tenantId
      auditAttributeBasePath: litigants
      queryMaps:
        - query: INSERT INTO public.dristi_case_litigants(id, tenantid, partycategory, individualid, organisationid, partytype, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime, hassigned, isresponserequired) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET tenantid = EXCLUDED.tenantid, isactive = EXCLUDED.isactive, case_id = EXCLUDED.case_id, additionaldetails = EXCLUDED.additionaldetails, lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime, isresponserequired=EXCLUDED.isresponserequired;
          basePath: litigants.*
          jsonMaps:
            - jsonPath: $.litigants.*.id
            - jsonPath: $.litigants.*.tenantId
            - jsonPath: $.litigants.*.partyCategory
            - jsonPath: $.litigants.*.individualId
            - jsonPath: $.litigants.*.organisationID
            - jsonPath: $.litigants.*.partyType
            - jsonPath: $.litigants.*.isActive
            - jsonPath: $.litigants.*.caseId
            - jsonPath: $.litigants.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.litigants.*.auditDetails.createdBy
            - jsonPath: $.litigants.*.auditDetails.lastModifiedBy
            - jsonPath: $.litigants.*.auditDetails.createdTime
            - jsonPath: $.litigants.*.auditDetails.lastModifiedTime
            - jsonPath: $.litigants.*.hasSigned
            - jsonPath: $.litigants.*.isResponseRequired
        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType, isActive, litigant_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?);
          basePath: litigants.*.documents.*
          jsonMaps:
            - jsonPath: $.litigants.*.documents.*.id
            - jsonPath: $.litigants.*.documents.*.fileStore
            - jsonPath: $.litigants.*.documents.*.documentUid
            - jsonPath: $.litigants.*.documents.*.documentType
            - jsonPath: $.litigants.*.documents.*.isActive
            - jsonPath: $.litigants[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.litigants.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

    - version: 1.0
      description: Persists new or update representative for a case in dristi_case_representatives table
      fromTopic: representative-join-case
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.id
      tenantIdJsonPath: $.tenantId
      auditAttributeBasePath: representatives
      queryMaps:
        - query: INSERT INTO public.dristi_case_representatives(id, tenantid, advocateid, isactive, case_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime, hassigned) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET tenantid = EXCLUDED.tenantid, advocateid = EXCLUDED.advocateid, isactive = EXCLUDED.isactive, case_id = EXCLUDED.case_id, additionaldetails = EXCLUDED.additionaldetails, lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime, hassigned = EXCLUDED.hassigned;
          basePath: representatives.*
          jsonMaps:
            - jsonPath: $.representatives.*.id
            - jsonPath: $.representatives.*.tenantId
            - jsonPath: $.representatives.*.advocateId
            - jsonPath: $.representatives.*.isActive
            - jsonPath: $.representatives.*.caseId
            - jsonPath: $.representatives.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.representatives.*.auditDetails.createdBy
            - jsonPath: $.representatives.*.auditDetails.lastModifiedBy
            - jsonPath: $.representatives.*.auditDetails.createdTime
            - jsonPath: $.representatives.*.auditDetails.lastModifiedTime
            - jsonPath: $.representatives.*.hasSigned
        - query: INSERT INTO public.dristi_case_representing(id, tenantid, partycategory, individualid, organisationid, case_id, partytype, isactive, representative_id, additionaldetails, createdby, lastmodifiedby, createdtime, lastmodifiedtime) VALUES (?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT (id) DO UPDATE SET lastmodifiedby = EXCLUDED.lastmodifiedby, lastmodifiedtime = EXCLUDED.lastmodifiedtime;
          basePath: representatives.*.representing.*
          jsonMaps:
            - jsonPath: $.representatives.*.representing.*.id
            - jsonPath: $.representatives.*.representing.*.tenantId
            - jsonPath: $.representatives.*.representing.*.partyCategory
            - jsonPath: $.representatives.*.representing.*.individualId
            - jsonPath: $.representatives.*.representing.*.organisationID
            - jsonPath: $.representatives.*.representing.*.caseId
            - jsonPath: $.representatives.*.representing.*.partyType
            - jsonPath: $.representatives.*.representing.*.isActive
            - jsonPath: $.representatives.*.[?({id} in @.representing[*].id)].id
            - jsonPath: $.representatives.*.representing.*.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.representatives.*.representing.*.auditDetails.createdBy
            - jsonPath: $.representatives.*.representing.*.auditDetails.lastModifiedBy
            - jsonPath: $.representatives.*.representing.*.auditDetails.createdTime
            - jsonPath: $.representatives.*.representing.*.auditDetails.lastModifiedTime
        - query: INSERT INTO dristi_case_document(id,fileStore,documentUid,documentType, isActive,representing_id, additionalDetails) VALUES (?, ?, ?, ?, ?, ?, ?);
          basePath: representatives.*.representing.*.documents.*
          jsonMaps:
            - jsonPath: $.representatives.*.representing.*.documents.*.id
            - jsonPath: $.representatives.*.representing.*.documents.*.fileStore
            - jsonPath: $.representatives.*.representing.*.documents.*.documentUid
            - jsonPath: $.representatives.*.representing.*.documents.*.documentType
            - jsonPath: $.representatives.*.representing.*.documents.*.isActive
            - jsonPath: $.representatives.*.representing[*][?({id} in @.documents[*].id)].id
            - jsonPath: $.representatives.*.representing.*.documents.*.additionalDetails
              type: JSON
              dbType: JSONB

    - version: 1.0
      description: Update representative for a case in dristi_case_representatives table
      fromTopic: update-representative-join-case
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.id
      tenantIdJsonPath: $.tenantId
      auditAttributeBasePath: representatives
      queryMaps:
        - query: UPDATE dristi_case_representatives SET isactive = ?, lastmodifiedby = ?, lastmodifiedtime = ? WHERE id = ?;
          basePath: representatives.*
          jsonMaps:
            - jsonPath: $.representatives.*.isActive
            - jsonPath: $.representatives.*.auditDetails.lastModifiedBy
            - jsonPath: $.representatives.*.auditDetails.lastModifiedTime
            - jsonPath: $.representatives.*.id
        - query: UPDATE dristi_case_representing SET isactive = ?, lastmodifiedby = ?, lastmodifiedtime = ? WHERE id = ?;
          basePath: representatives.*.representing.*
          jsonMaps:
            - jsonPath: $.representatives.*.representing.*.isActive
            - jsonPath: $.representatives.*.representing.*.auditDetails.lastModifiedBy
            - jsonPath: $.representatives.*.representing.*.auditDetails.lastModifiedTime
            - jsonPath: $.representatives.*.representing.*.id

    - version: 1.0
      description: updates pending advocate requests of a case in dristi_cases table when advocate joins the case
      fromTopic: join-case-update-pending-advocate-requests
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.filingNumber
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: $
      queryMaps:
        - query: UPDATE dristi_cases SET pendingAdvocateRequests = ?, lastmodifiedby = ?, lastmodifiedtime = ? WHERE filingNumber = ?;
          basePath: $
          jsonMaps:
            - jsonPath: $.pendingAdvocateRequests
              type: JSON
              dbType: JSONB
            - jsonPath: $.auditDetails.lastModifiedBy
            - jsonPath: $.auditDetails.lastModifiedTime
            - jsonPath: $.filingNumber
    - version: 1.0
      description: updates additional details of a case in dristi_cases table when litigant or advocate joins the case
      fromTopic: join-case-update-case-additional-details-v2
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.filingNumber
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: $
      queryMaps:
        - query: UPDATE dristi_cases SET additionaldetails = ?, lastmodifiedby = ?, lastmodifiedtime = ? WHERE filingNumber = ?;
          basePath: $
          jsonMaps:
            - jsonPath: $.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.auditDetails.lastModifiedBy
            - jsonPath: $.auditDetails.lastModifiedTime
            - jsonPath: $.filingNumber

    - version: 1.0
      description: Update case overall workflow in tables
      fromTopic: case-overall-status-topic
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.filingNumber
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: caseOverallStatus
      queryMaps:
        - query: UPDATE  dristi_cases SET stage =?, substage =?, lastmodifiedby = ?, lastmodifiedtime = ? where filingnumber =? and tenantid =?;
          basePath: caseOverallStatus
          jsonMaps:
            - jsonPath: $.caseOverallStatus.stage
            - jsonPath: $.caseOverallStatus.substage
            - jsonPath: $.caseOverallStatus.auditDetails.lastModifiedBy
            - jsonPath: $.caseOverallStatus.auditDetails.lastModifiedTime
            - jsonPath: $.caseOverallStatus.filingNumber
            - jsonPath: $.caseOverallStatus.tenantId

    - version: 1.0
      description: updates additional details of a case in dristi_cases table when litigant or advocate joins the case
      fromTopic: join-case-update-case-additional-details
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.caseFilingNumber
      tenantIdJsonPath: $.RequestInfo.userInfo.tenantId
      transactionCodeJsonPath: $.caseFilingNumber
      auditAttributeBasePath: $
      queryMaps:
        - query: UPDATE dristi_cases SET additionaldetails = ?, lastmodifiedby = ?, lastmodifiedtime = ? WHERE filingNumber = ?;
          basePath: $
          jsonMaps:
            - jsonPath: $.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.auditDetails.lastModifiedBy
            - jsonPath: $.auditDetails.lastModifiedTime
            - jsonPath: $.caseFilingNumber

    - version: 1.0
      description: Update case outcome in tables
      fromTopic: case-outcome-topic
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.filingNumber
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: outcome
      queryMaps:
        - query: UPDATE  dristi_cases SET outcome =?, lastmodifiedby = ?, lastmodifiedtime = ? where filingnumber =? and tenantid =?;
          basePath: outcome
          jsonMaps:
            - jsonPath: $.outcome.outcome
            - jsonPath: $.outcome.auditDetails.lastModifiedBy
            - jsonPath: $.outcome.auditDetails.lastModifiedTime
            - jsonPath: $.outcome.filingNumber
            - jsonPath: $.outcome.tenantId

    - version: 1.0
      description: Edit case by admin
      fromTopic: edit-case
      isTransaction: true
      isAuditEnabled: true
      module: CASE
      objecIdJsonPath: $.id
      tenantIdJsonPath: $.tenantId
      transactionCodeJsonPath: $.filingNumber
      auditAttributeBasePath: cases
      queryMaps:
        - query: UPDATE dristi_cases SET casetitle = ?, additionaldetails = ?, lastmodifiedby = ?, lastmodifiedtime = ? WHERE id = ?;
          basePath: cases
          jsonMaps:
            - jsonPath: $.cases.caseTitle
            - jsonPath: $.cases.additionalDetails
              type: JSON
              dbType: JSONB
            - jsonPath: $.cases.auditDetails.lastModifiedBy
            - jsonPath: $.cases.auditDetails.lastModifiedTime
            - jsonPath: $.cases.id
